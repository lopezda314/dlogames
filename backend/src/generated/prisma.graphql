# source: https://us1.prisma.sh/david-lopez-fcf066/dlogames/dev
# timestamp: Sat Jan 25 2020 22:13:13 GMT-0500 (Eastern Standard Time)

type AggregateDlonamesGame {
  count: Int!
}

type AggregateDlonamesStats {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

type DlonamesGame implements Node {
  id: ID!
  blueTeam: [String!]!
  blueCodemaster: String!
  redTeam: [String!]!
  redCodemaster: String!
  currentTeam: String!
  winningTeam: String
  clue: String
  blueClues: [String!]!
  redClues: [String!]!
  numGuesses: Int
  wordsGuessed: [String!]!
  words: [String!]!
  redWords: [String!]!
  blueWords: [String!]!
  deathWord: String!
  gameIsFinished: Boolean!
}

"""A connection to a list of items."""
type DlonamesGameConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [DlonamesGameEdge]!
  aggregate: AggregateDlonamesGame!
}

input DlonamesGameCreateblueCluesInput {
  set: [String!]
}

input DlonamesGameCreateblueTeamInput {
  set: [String!]
}

input DlonamesGameCreateblueWordsInput {
  set: [String!]
}

input DlonamesGameCreateInput {
  id: ID
  blueCodemaster: String!
  redCodemaster: String!
  currentTeam: String!
  winningTeam: String
  clue: String
  numGuesses: Int
  deathWord: String!
  gameIsFinished: Boolean!
  blueTeam: DlonamesGameCreateblueTeamInput
  redTeam: DlonamesGameCreateredTeamInput
  blueClues: DlonamesGameCreateblueCluesInput
  redClues: DlonamesGameCreateredCluesInput
  wordsGuessed: DlonamesGameCreatewordsGuessedInput
  words: DlonamesGameCreatewordsInput
  redWords: DlonamesGameCreateredWordsInput
  blueWords: DlonamesGameCreateblueWordsInput
}

input DlonamesGameCreateredCluesInput {
  set: [String!]
}

input DlonamesGameCreateredTeamInput {
  set: [String!]
}

input DlonamesGameCreateredWordsInput {
  set: [String!]
}

input DlonamesGameCreatewordsGuessedInput {
  set: [String!]
}

input DlonamesGameCreatewordsInput {
  set: [String!]
}

"""An edge in a connection."""
type DlonamesGameEdge {
  """The item at the end of the edge."""
  node: DlonamesGame!

  """A cursor for use in pagination."""
  cursor: String!
}

enum DlonamesGameOrderByInput {
  id_ASC
  id_DESC
  blueCodemaster_ASC
  blueCodemaster_DESC
  redCodemaster_ASC
  redCodemaster_DESC
  currentTeam_ASC
  currentTeam_DESC
  winningTeam_ASC
  winningTeam_DESC
  clue_ASC
  clue_DESC
  numGuesses_ASC
  numGuesses_DESC
  deathWord_ASC
  deathWord_DESC
  gameIsFinished_ASC
  gameIsFinished_DESC
}

type DlonamesGamePreviousValues {
  id: ID!
  blueTeam: [String!]!
  blueCodemaster: String!
  redTeam: [String!]!
  redCodemaster: String!
  currentTeam: String!
  winningTeam: String
  clue: String
  blueClues: [String!]!
  redClues: [String!]!
  numGuesses: Int
  wordsGuessed: [String!]!
  words: [String!]!
  redWords: [String!]!
  blueWords: [String!]!
  deathWord: String!
  gameIsFinished: Boolean!
}

type DlonamesGameSubscriptionPayload {
  mutation: MutationType!
  node: DlonamesGame
  updatedFields: [String!]
  previousValues: DlonamesGamePreviousValues
}

input DlonamesGameSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [DlonamesGameSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [DlonamesGameSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DlonamesGameSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: DlonamesGameWhereInput
}

input DlonamesGameUpdateblueCluesInput {
  set: [String!]
}

input DlonamesGameUpdateblueTeamInput {
  set: [String!]
}

input DlonamesGameUpdateblueWordsInput {
  set: [String!]
}

input DlonamesGameUpdateInput {
  blueCodemaster: String
  redCodemaster: String
  currentTeam: String
  winningTeam: String
  clue: String
  numGuesses: Int
  deathWord: String
  gameIsFinished: Boolean
  blueTeam: DlonamesGameUpdateblueTeamInput
  redTeam: DlonamesGameUpdateredTeamInput
  blueClues: DlonamesGameUpdateblueCluesInput
  redClues: DlonamesGameUpdateredCluesInput
  wordsGuessed: DlonamesGameUpdatewordsGuessedInput
  words: DlonamesGameUpdatewordsInput
  redWords: DlonamesGameUpdateredWordsInput
  blueWords: DlonamesGameUpdateblueWordsInput
}

input DlonamesGameUpdateManyMutationInput {
  blueCodemaster: String
  redCodemaster: String
  currentTeam: String
  winningTeam: String
  clue: String
  numGuesses: Int
  deathWord: String
  gameIsFinished: Boolean
  blueTeam: DlonamesGameUpdateblueTeamInput
  redTeam: DlonamesGameUpdateredTeamInput
  blueClues: DlonamesGameUpdateblueCluesInput
  redClues: DlonamesGameUpdateredCluesInput
  wordsGuessed: DlonamesGameUpdatewordsGuessedInput
  words: DlonamesGameUpdatewordsInput
  redWords: DlonamesGameUpdateredWordsInput
  blueWords: DlonamesGameUpdateblueWordsInput
}

input DlonamesGameUpdateredCluesInput {
  set: [String!]
}

input DlonamesGameUpdateredTeamInput {
  set: [String!]
}

input DlonamesGameUpdateredWordsInput {
  set: [String!]
}

input DlonamesGameUpdatewordsGuessedInput {
  set: [String!]
}

input DlonamesGameUpdatewordsInput {
  set: [String!]
}

input DlonamesGameWhereInput {
  """Logical AND on all given filters."""
  AND: [DlonamesGameWhereInput!]

  """Logical OR on all given filters."""
  OR: [DlonamesGameWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DlonamesGameWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  blueCodemaster: String

  """All values that are not equal to given value."""
  blueCodemaster_not: String

  """All values that are contained in given list."""
  blueCodemaster_in: [String!]

  """All values that are not contained in given list."""
  blueCodemaster_not_in: [String!]

  """All values less than the given value."""
  blueCodemaster_lt: String

  """All values less than or equal the given value."""
  blueCodemaster_lte: String

  """All values greater than the given value."""
  blueCodemaster_gt: String

  """All values greater than or equal the given value."""
  blueCodemaster_gte: String

  """All values containing the given string."""
  blueCodemaster_contains: String

  """All values not containing the given string."""
  blueCodemaster_not_contains: String

  """All values starting with the given string."""
  blueCodemaster_starts_with: String

  """All values not starting with the given string."""
  blueCodemaster_not_starts_with: String

  """All values ending with the given string."""
  blueCodemaster_ends_with: String

  """All values not ending with the given string."""
  blueCodemaster_not_ends_with: String
  redCodemaster: String

  """All values that are not equal to given value."""
  redCodemaster_not: String

  """All values that are contained in given list."""
  redCodemaster_in: [String!]

  """All values that are not contained in given list."""
  redCodemaster_not_in: [String!]

  """All values less than the given value."""
  redCodemaster_lt: String

  """All values less than or equal the given value."""
  redCodemaster_lte: String

  """All values greater than the given value."""
  redCodemaster_gt: String

  """All values greater than or equal the given value."""
  redCodemaster_gte: String

  """All values containing the given string."""
  redCodemaster_contains: String

  """All values not containing the given string."""
  redCodemaster_not_contains: String

  """All values starting with the given string."""
  redCodemaster_starts_with: String

  """All values not starting with the given string."""
  redCodemaster_not_starts_with: String

  """All values ending with the given string."""
  redCodemaster_ends_with: String

  """All values not ending with the given string."""
  redCodemaster_not_ends_with: String
  currentTeam: String

  """All values that are not equal to given value."""
  currentTeam_not: String

  """All values that are contained in given list."""
  currentTeam_in: [String!]

  """All values that are not contained in given list."""
  currentTeam_not_in: [String!]

  """All values less than the given value."""
  currentTeam_lt: String

  """All values less than or equal the given value."""
  currentTeam_lte: String

  """All values greater than the given value."""
  currentTeam_gt: String

  """All values greater than or equal the given value."""
  currentTeam_gte: String

  """All values containing the given string."""
  currentTeam_contains: String

  """All values not containing the given string."""
  currentTeam_not_contains: String

  """All values starting with the given string."""
  currentTeam_starts_with: String

  """All values not starting with the given string."""
  currentTeam_not_starts_with: String

  """All values ending with the given string."""
  currentTeam_ends_with: String

  """All values not ending with the given string."""
  currentTeam_not_ends_with: String
  winningTeam: String

  """All values that are not equal to given value."""
  winningTeam_not: String

  """All values that are contained in given list."""
  winningTeam_in: [String!]

  """All values that are not contained in given list."""
  winningTeam_not_in: [String!]

  """All values less than the given value."""
  winningTeam_lt: String

  """All values less than or equal the given value."""
  winningTeam_lte: String

  """All values greater than the given value."""
  winningTeam_gt: String

  """All values greater than or equal the given value."""
  winningTeam_gte: String

  """All values containing the given string."""
  winningTeam_contains: String

  """All values not containing the given string."""
  winningTeam_not_contains: String

  """All values starting with the given string."""
  winningTeam_starts_with: String

  """All values not starting with the given string."""
  winningTeam_not_starts_with: String

  """All values ending with the given string."""
  winningTeam_ends_with: String

  """All values not ending with the given string."""
  winningTeam_not_ends_with: String
  clue: String

  """All values that are not equal to given value."""
  clue_not: String

  """All values that are contained in given list."""
  clue_in: [String!]

  """All values that are not contained in given list."""
  clue_not_in: [String!]

  """All values less than the given value."""
  clue_lt: String

  """All values less than or equal the given value."""
  clue_lte: String

  """All values greater than the given value."""
  clue_gt: String

  """All values greater than or equal the given value."""
  clue_gte: String

  """All values containing the given string."""
  clue_contains: String

  """All values not containing the given string."""
  clue_not_contains: String

  """All values starting with the given string."""
  clue_starts_with: String

  """All values not starting with the given string."""
  clue_not_starts_with: String

  """All values ending with the given string."""
  clue_ends_with: String

  """All values not ending with the given string."""
  clue_not_ends_with: String
  numGuesses: Int

  """All values that are not equal to given value."""
  numGuesses_not: Int

  """All values that are contained in given list."""
  numGuesses_in: [Int!]

  """All values that are not contained in given list."""
  numGuesses_not_in: [Int!]

  """All values less than the given value."""
  numGuesses_lt: Int

  """All values less than or equal the given value."""
  numGuesses_lte: Int

  """All values greater than the given value."""
  numGuesses_gt: Int

  """All values greater than or equal the given value."""
  numGuesses_gte: Int
  deathWord: String

  """All values that are not equal to given value."""
  deathWord_not: String

  """All values that are contained in given list."""
  deathWord_in: [String!]

  """All values that are not contained in given list."""
  deathWord_not_in: [String!]

  """All values less than the given value."""
  deathWord_lt: String

  """All values less than or equal the given value."""
  deathWord_lte: String

  """All values greater than the given value."""
  deathWord_gt: String

  """All values greater than or equal the given value."""
  deathWord_gte: String

  """All values containing the given string."""
  deathWord_contains: String

  """All values not containing the given string."""
  deathWord_not_contains: String

  """All values starting with the given string."""
  deathWord_starts_with: String

  """All values not starting with the given string."""
  deathWord_not_starts_with: String

  """All values ending with the given string."""
  deathWord_ends_with: String

  """All values not ending with the given string."""
  deathWord_not_ends_with: String
  gameIsFinished: Boolean

  """All values that are not equal to given value."""
  gameIsFinished_not: Boolean
}

input DlonamesGameWhereUniqueInput {
  id: ID
}

type DlonamesStats implements Node {
  id: ID!
  username: String!
  numberOfCluesGiven: Int
  numberOfCluesGuessedCorrectly: Int
  numberOfGuesses: Int
  numberOfCorrectGuesses: Int
  numberOfGamesPlayed: Int
}

"""A connection to a list of items."""
type DlonamesStatsConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [DlonamesStatsEdge]!
  aggregate: AggregateDlonamesStats!
}

input DlonamesStatsCreateInput {
  id: ID
  username: String!
  numberOfCluesGiven: Int
  numberOfCluesGuessedCorrectly: Int
  numberOfGuesses: Int
  numberOfCorrectGuesses: Int
  numberOfGamesPlayed: Int
}

"""An edge in a connection."""
type DlonamesStatsEdge {
  """The item at the end of the edge."""
  node: DlonamesStats!

  """A cursor for use in pagination."""
  cursor: String!
}

enum DlonamesStatsOrderByInput {
  id_ASC
  id_DESC
  username_ASC
  username_DESC
  numberOfCluesGiven_ASC
  numberOfCluesGiven_DESC
  numberOfCluesGuessedCorrectly_ASC
  numberOfCluesGuessedCorrectly_DESC
  numberOfGuesses_ASC
  numberOfGuesses_DESC
  numberOfCorrectGuesses_ASC
  numberOfCorrectGuesses_DESC
  numberOfGamesPlayed_ASC
  numberOfGamesPlayed_DESC
}

type DlonamesStatsPreviousValues {
  id: ID!
  username: String!
  numberOfCluesGiven: Int
  numberOfCluesGuessedCorrectly: Int
  numberOfGuesses: Int
  numberOfCorrectGuesses: Int
  numberOfGamesPlayed: Int
}

type DlonamesStatsSubscriptionPayload {
  mutation: MutationType!
  node: DlonamesStats
  updatedFields: [String!]
  previousValues: DlonamesStatsPreviousValues
}

input DlonamesStatsSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [DlonamesStatsSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [DlonamesStatsSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DlonamesStatsSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: DlonamesStatsWhereInput
}

input DlonamesStatsUpdateInput {
  username: String
  numberOfCluesGiven: Int
  numberOfCluesGuessedCorrectly: Int
  numberOfGuesses: Int
  numberOfCorrectGuesses: Int
  numberOfGamesPlayed: Int
}

input DlonamesStatsUpdateManyMutationInput {
  username: String
  numberOfCluesGiven: Int
  numberOfCluesGuessedCorrectly: Int
  numberOfGuesses: Int
  numberOfCorrectGuesses: Int
  numberOfGamesPlayed: Int
}

input DlonamesStatsWhereInput {
  """Logical AND on all given filters."""
  AND: [DlonamesStatsWhereInput!]

  """Logical OR on all given filters."""
  OR: [DlonamesStatsWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [DlonamesStatsWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  username: String

  """All values that are not equal to given value."""
  username_not: String

  """All values that are contained in given list."""
  username_in: [String!]

  """All values that are not contained in given list."""
  username_not_in: [String!]

  """All values less than the given value."""
  username_lt: String

  """All values less than or equal the given value."""
  username_lte: String

  """All values greater than the given value."""
  username_gt: String

  """All values greater than or equal the given value."""
  username_gte: String

  """All values containing the given string."""
  username_contains: String

  """All values not containing the given string."""
  username_not_contains: String

  """All values starting with the given string."""
  username_starts_with: String

  """All values not starting with the given string."""
  username_not_starts_with: String

  """All values ending with the given string."""
  username_ends_with: String

  """All values not ending with the given string."""
  username_not_ends_with: String
  numberOfCluesGiven: Int

  """All values that are not equal to given value."""
  numberOfCluesGiven_not: Int

  """All values that are contained in given list."""
  numberOfCluesGiven_in: [Int!]

  """All values that are not contained in given list."""
  numberOfCluesGiven_not_in: [Int!]

  """All values less than the given value."""
  numberOfCluesGiven_lt: Int

  """All values less than or equal the given value."""
  numberOfCluesGiven_lte: Int

  """All values greater than the given value."""
  numberOfCluesGiven_gt: Int

  """All values greater than or equal the given value."""
  numberOfCluesGiven_gte: Int
  numberOfCluesGuessedCorrectly: Int

  """All values that are not equal to given value."""
  numberOfCluesGuessedCorrectly_not: Int

  """All values that are contained in given list."""
  numberOfCluesGuessedCorrectly_in: [Int!]

  """All values that are not contained in given list."""
  numberOfCluesGuessedCorrectly_not_in: [Int!]

  """All values less than the given value."""
  numberOfCluesGuessedCorrectly_lt: Int

  """All values less than or equal the given value."""
  numberOfCluesGuessedCorrectly_lte: Int

  """All values greater than the given value."""
  numberOfCluesGuessedCorrectly_gt: Int

  """All values greater than or equal the given value."""
  numberOfCluesGuessedCorrectly_gte: Int
  numberOfGuesses: Int

  """All values that are not equal to given value."""
  numberOfGuesses_not: Int

  """All values that are contained in given list."""
  numberOfGuesses_in: [Int!]

  """All values that are not contained in given list."""
  numberOfGuesses_not_in: [Int!]

  """All values less than the given value."""
  numberOfGuesses_lt: Int

  """All values less than or equal the given value."""
  numberOfGuesses_lte: Int

  """All values greater than the given value."""
  numberOfGuesses_gt: Int

  """All values greater than or equal the given value."""
  numberOfGuesses_gte: Int
  numberOfCorrectGuesses: Int

  """All values that are not equal to given value."""
  numberOfCorrectGuesses_not: Int

  """All values that are contained in given list."""
  numberOfCorrectGuesses_in: [Int!]

  """All values that are not contained in given list."""
  numberOfCorrectGuesses_not_in: [Int!]

  """All values less than the given value."""
  numberOfCorrectGuesses_lt: Int

  """All values less than or equal the given value."""
  numberOfCorrectGuesses_lte: Int

  """All values greater than the given value."""
  numberOfCorrectGuesses_gt: Int

  """All values greater than or equal the given value."""
  numberOfCorrectGuesses_gte: Int
  numberOfGamesPlayed: Int

  """All values that are not equal to given value."""
  numberOfGamesPlayed_not: Int

  """All values that are contained in given list."""
  numberOfGamesPlayed_in: [Int!]

  """All values that are not contained in given list."""
  numberOfGamesPlayed_not_in: [Int!]

  """All values less than the given value."""
  numberOfGamesPlayed_lt: Int

  """All values less than or equal the given value."""
  numberOfGamesPlayed_lte: Int

  """All values greater than the given value."""
  numberOfGamesPlayed_gt: Int

  """All values greater than or equal the given value."""
  numberOfGamesPlayed_gte: Int
}

input DlonamesStatsWhereUniqueInput {
  id: ID
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createDlonamesGame(data: DlonamesGameCreateInput!): DlonamesGame!
  createDlonamesStats(data: DlonamesStatsCreateInput!): DlonamesStats!
  updateDlonamesGame(data: DlonamesGameUpdateInput!, where: DlonamesGameWhereUniqueInput!): DlonamesGame
  updateDlonamesStats(data: DlonamesStatsUpdateInput!, where: DlonamesStatsWhereUniqueInput!): DlonamesStats
  deleteDlonamesGame(where: DlonamesGameWhereUniqueInput!): DlonamesGame
  deleteDlonamesStats(where: DlonamesStatsWhereUniqueInput!): DlonamesStats
  upsertDlonamesGame(where: DlonamesGameWhereUniqueInput!, create: DlonamesGameCreateInput!, update: DlonamesGameUpdateInput!): DlonamesGame!
  upsertDlonamesStats(where: DlonamesStatsWhereUniqueInput!, create: DlonamesStatsCreateInput!, update: DlonamesStatsUpdateInput!): DlonamesStats!
  updateManyDlonamesGames(data: DlonamesGameUpdateManyMutationInput!, where: DlonamesGameWhereInput): BatchPayload!
  updateManyDlonamesStatses(data: DlonamesStatsUpdateManyMutationInput!, where: DlonamesStatsWhereInput): BatchPayload!
  deleteManyDlonamesGames(where: DlonamesGameWhereInput): BatchPayload!
  deleteManyDlonamesStatses(where: DlonamesStatsWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Query {
  dlonamesGames(where: DlonamesGameWhereInput, orderBy: DlonamesGameOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DlonamesGame]!
  dlonamesStatses(where: DlonamesStatsWhereInput, orderBy: DlonamesStatsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [DlonamesStats]!
  dlonamesGame(where: DlonamesGameWhereUniqueInput!): DlonamesGame
  dlonamesStats(where: DlonamesStatsWhereUniqueInput!): DlonamesStats
  dlonamesGamesConnection(where: DlonamesGameWhereInput, orderBy: DlonamesGameOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DlonamesGameConnection!
  dlonamesStatsesConnection(where: DlonamesStatsWhereInput, orderBy: DlonamesStatsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DlonamesStatsConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Subscription {
  dlonamesGame(where: DlonamesGameSubscriptionWhereInput): DlonamesGameSubscriptionPayload
  dlonamesStats(where: DlonamesStatsSubscriptionWhereInput): DlonamesStatsSubscriptionPayload
}
